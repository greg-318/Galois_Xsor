
# Генератор псевдослучайных двоичных последовательностей
# Схема на основе сдвигового регистра с линейной обратной связью
# Конфигурация Фибоначчи

# Сдвиговый регистр
# Количество разрядов = 4
# Нумерация ячеек списка: слева направо, 0...3 (старшая)
# Нумерация разрядов регистра: слева направо, 0...3 (старший)
# Начальное состояние - произвольное, но комбинация только из нулей запрещена

reg=[1,0,0,0]

# Схема отводов
# Количество управляющих ячеек = 4
# Нумерация разрядов слава направо, 0...3
# Содержимое ячеек - в соответствии с заданным неприводимым примитивным полиномом
# Полином: 13 | 1 0011 | x**4 + x + 1
# Полином: 19 | 1 1001 | x**4 + x**3 + 1

scheme=[0,1,1,1]

# Гамма - выходная ключевая последовательность
# В исходном состоянии гамма пуста

gamma=[]

# Работа генератора в циклическом режиме
# В одном цикле генерируется один знак гаммы
# Количество циклов = 255, т.е. максимальный размер гаммы для 8-ми разрядов

for i in range (1,64):

    # К гамме добавляется содержимое последнего (старшего) разряда регистра

    gamma.append(reg[3])

    # Определение значениея бита обратной связи
    # Учитываются значения управляющих ячеек
    # Используется функция XOR (^)

    s=0
    for j in range (3,-1,-1):
        s=s^(reg[j]*scheme[j])

    # Производится последовательный сдвиг содержимого всех ячеек регистра слева направо

    for j in range (3,-1,-1):
        reg[j]=reg[j-1]

    # В нулевую ячейку записывается значение бита обратной связи

    reg[0]=s

# Вывод результата - гамма
print(gamma)